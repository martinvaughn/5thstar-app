 Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main
- staging

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'nonononooooo95273a46-54b8-472c-a59a-873fe762249a'
  imageRepository: 'nononoooorealtrax-emailer'
  containerRegistry: 'momommoooootwcbi.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Test, Build, and Push
  jobs:
  # - job: test
  #   displayName: Test
  #   steps: 
  #   - task: Npm@1
  #     inputs:
  #       command: 'install'
  #   - task: Npm@1
  #     inputs:
  #       command: 'custom'
  #       customCommand: 'run test'
  - job: build_production
    displayName: Build and Push Production
    condition: and(eq(variables['Build.SourceBranchName'], 'main'), ne(variables['Build.Reason'], 'PullRequest'))
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest
  - job: build_staging
    displayName: Build and Push Staging
    condition: and(eq(variables['Build.SourceBranchName'], 'staging'), ne(variables['Build.Reason'], 'PullRequest'))
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          staging
